//TC: O(N)
//MC: O(N)
//studied from week 1 solution
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        vector<int> prefixProducts(nums.size(), 1), postFixProducts(nums.size(), 1), result;
        for(int i=1; i<nums.size(); i++){
            prefixProducts[i] = prefixProducts[i-1] * nums[i-1];
        }
        for(int i=nums.size()-2; i>=0; i--){
            postFixProducts[i] = postFixProducts[i+1] * nums[i+1];
        }
        for(int i=0;i<nums.size(); i++){
            result.push_back(prefixProducts[i] * postFixProducts[i]);
        }
        return result;
    }
};